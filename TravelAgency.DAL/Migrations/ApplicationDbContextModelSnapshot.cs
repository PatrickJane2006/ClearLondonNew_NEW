// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TravelAgency.DAL;

namespace TravelAgency.DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.CountriesDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int>("Count_Services")
                        .HasColumnType("integer")
                        .HasColumnName("count_services");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Path_img")
                        .HasColumnType("text")
                        .HasColumnName("path_img");

                    b.HasKey("Id");

                    b.ToTable("countries");
                });

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.OrdersDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<Guid>("Id_Service")
                        .HasColumnType("uuid")
                        .HasColumnName("id_service");

                    b.Property<Guid>("Id_User")
                        .HasColumnType("uuid")
                        .HasColumnName("id_user");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.ToTable("orders");
                });

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.Picture_servicesDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<Guid>("Id_Service")
                        .HasColumnType("uuid")
                        .HasColumnName("id_service");

                    b.Property<string>("Path_Img")
                        .HasColumnType("text")
                        .HasColumnName("path_img");

                    b.HasKey("Id");

                    b.ToTable("picture_services");
                });

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.RequestsDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<Guid>("Id_User")
                        .HasColumnType("uuid")
                        .HasColumnName("id_user");

                    b.Property<string>("Path_Img")
                        .HasColumnType("text")
                        .HasColumnName("path_img");

                    b.Property<int>("Status")
                        .HasColumnType("integer")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("requests");
                });

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.ServicesDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .HasColumnType("text")
                        .HasColumnName("city");

                    b.Property<decimal>("Cleaning_Apartment_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_apartment_price");

                    b.Property<decimal>("Cleaning_Area_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_area_price");

                    b.Property<decimal>("Cleaning_Construction_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_construction_price");

                    b.Property<decimal>("Cleaning_Garden_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_garden_price");

                    b.Property<decimal>("Cleaning_Home_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_home_price");

                    b.Property<decimal>("Cleaning_Office_Price")
                        .HasColumnType("numeric")
                        .HasColumnName("cleaning_office_price");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<Guid>("Id_country")
                        .HasColumnType("uuid")
                        .HasColumnName("id_country");

                    b.Property<string>("Name_Company")
                        .HasColumnType("text")
                        .HasColumnName("name_company");

                    b.Property<string>("Path_Img")
                        .HasColumnType("text")
                        .HasColumnName("path_img");

                    b.HasKey("Id");

                    b.ToTable("services");
                });

            modelBuilder.Entity("TravelAgency.Domain.ModelsDb.UsersDb", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("createdAt");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<string>("Login")
                        .HasColumnType("text")
                        .HasColumnName("login");

                    b.Property<string>("Password")
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("Path_Img")
                        .HasColumnType("text")
                        .HasColumnName("path_img");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
